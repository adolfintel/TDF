From 0b9addee7d7c66f69641b8276a49142e710b5651 Mon Sep 17 00:00:00 2001
From: Federico Dossena <info@fdossena.com>
Date: Thu, 1 May 2025 07:27:33 +0200
Subject: [PATCH] Temp fix for proton 10 wine

---
 .../hotfixes/valve/de-steamify-90-be.mypatch  | 231 ++++++++----------
 wine-tkg-git/wine-tkg-scripts/build-32.sh     |   3 +
 wine-tkg-git/wine-tkg-scripts/build-64.sh     |   3 +
 3 files changed, 114 insertions(+), 123 deletions(-)

diff --git a/wine-tkg-git/wine-tkg-patches/hotfixes/valve/de-steamify-90-be.mypatch b/wine-tkg-git/wine-tkg-patches/hotfixes/valve/de-steamify-90-be.mypatch
index 7609e289..b956466c 100644
--- a/wine-tkg-git/wine-tkg-patches/hotfixes/valve/de-steamify-90-be.mypatch
+++ b/wine-tkg-git/wine-tkg-patches/hotfixes/valve/de-steamify-90-be.mypatch
@@ -1,27 +1,26 @@
-From d06acc9bfad289a644f9831e5c21f263157faa53 Mon Sep 17 00:00:00 2001
+From dead93698851682266368cb49b920a850e0c95ca Mon Sep 17 00:00:00 2001
 From: Federico Dossena <info@fdossena.com>
-Date: Thu, 5 Dec 2024 08:05:28 +0100
-Subject: [PATCH] De-steamify proton's wine
+Date: Wed, 30 Apr 2025 14:36:07 +0200
+Subject: [PATCH 1/2] De-steamify proton's wine
 
 ---
  dlls/advapi32/advapi.c          |  34 +++--
  dlls/kernelbase/process.c       |  15 ---
- dlls/ntdll/loader.c             |  64 +---------
+ dlls/ntdll/loader.c             |  69 +---------
  dlls/ntdll/unix/env.c           |   3 +-
- dlls/ntdll/unix/loader.c        | 128 +------------------
+ dlls/ntdll/unix/loader.c        | 168 +-----------------------
  dlls/ntdll/unix/signal_i386.c   |   7 -
  dlls/ntdll/unix/signal_x86_64.c |   7 -
  dlls/ntdll/unix/unix_private.h  |   1 -
  dlls/ntdll/unixlib.h            |   7 -
  dlls/shell32/shellpath.c        | 219 +++++++++++++++++++++++++++-----
  dlls/winex11.drv/window.c       |  15 +--
- loader/wine.inf.in              |  27 +---
  programs/wineboot/wineboot.c    |  33 +++++
  programs/winebrowser/main.c     |  16 ---
  programs/winedbg/debugger.h     |   2 -
  programs/winedbg/tgt_active.c   |  48 -------
  programs/winedbg/winedbg.c      |  10 +-
- 17 files changed, 242 insertions(+), 394 deletions(-)
+ 16 files changed, 239 insertions(+), 415 deletions(-)
 
 diff --git a/dlls/advapi32/advapi.c b/dlls/advapi32/advapi.c
 index 127cec57252..2284e92b263 100644
@@ -76,10 +75,10 @@ index 127cec57252..2284e92b263 100644
  
  /******************************************************************************
 diff --git a/dlls/kernelbase/process.c b/dlls/kernelbase/process.c
-index 9add5d9afac..a23d1cacebd 100644
+index 692d859a28d..31cd9553344 100644
 --- a/dlls/kernelbase/process.c
 +++ b/dlls/kernelbase/process.c
-@@ -1303,21 +1303,6 @@ HANDLE WINAPI DECLSPEC_HOTPATCH OpenProcess( DWORD access, BOOL inherit, DWORD i
+@@ -1304,21 +1304,6 @@ HANDLE WINAPI DECLSPEC_HOTPATCH OpenProcess( DWORD access, BOOL inherit, DWORD i
      attr.SecurityDescriptor = NULL;
      attr.SecurityQualityOfService = NULL;
  
@@ -102,10 +101,10 @@ index 9add5d9afac..a23d1cacebd 100644
      cid.UniqueThread  = 0;
  
 diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
-index b16a899525d..8cbeb664b29 100644
+index 75669e95b72..2e3297a4ec3 100644
 --- a/dlls/ntdll/loader.c
 +++ b/dlls/ntdll/loader.c
-@@ -90,7 +90,7 @@ const WCHAR windows_dir[] = L"C:\\windows";
+@@ -86,7 +86,7 @@ const WCHAR windows_dir[] = L"C:\\windows";
  const WCHAR system_dir[] = L"C:\\windows\\system32\\";
  
  /* system search path */
@@ -114,7 +113,7 @@ index b16a899525d..8cbeb664b29 100644
  
  static BOOL is_prefix_bootstrap;  /* are we bootstrapping the prefix? */
  static BOOL imports_fixup_done = FALSE;  /* set once the imports have been fixed up, before attaching them */
-@@ -2327,19 +2327,6 @@ static NTSTATUS perform_relocations( void *module, IMAGE_NT_HEADERS *nt, SIZE_T
+@@ -2267,19 +2267,6 @@ static NTSTATUS perform_relocations( void *module, IMAGE_NT_HEADERS *nt, SIZE_T
      return STATUS_SUCCESS;
  }
  
@@ -134,7 +133,7 @@ index b16a899525d..8cbeb664b29 100644
  /*************************************************************************
   *		build_module
   *
-@@ -2350,17 +2337,12 @@ static NTSTATUS build_module( LPCWSTR load_path, const UNICODE_STRING *nt_name,
+@@ -2290,17 +2277,12 @@ static NTSTATUS build_module( LPCWSTR load_path, const UNICODE_STRING *nt_name,
                                DWORD flags, BOOL system, WINE_MODREF **pwm )
  {
      static const char builtin_signature[] = "Wine builtin DLL";
@@ -152,7 +151,7 @@ index b16a899525d..8cbeb664b29 100644
  
      if (!(nt = RtlImageNtHeader( *module ))) return STATUS_INVALID_IMAGE_FORMAT;
  
-@@ -2381,50 +2363,6 @@ static NTSTATUS build_module( LPCWSTR load_path, const UNICODE_STRING *nt_name,
+@@ -2321,55 +2303,6 @@ static NTSTATUS build_module( LPCWSTR load_path, const UNICODE_STRING *nt_name,
  
      update_load_config( *module );
  
@@ -198,16 +197,21 @@ index b16a899525d..8cbeb664b29 100644
 -            TRACE( "steamclient ImageBase %#Ix.\n", nt->OptionalHeader.ImageBase );
 -            NtProtectVirtualMemory( NtCurrentProcess(), &addr, &size, protect_old, &protect_old );
 -        }
+-        else
+-        {
+-            fixup_imports( wm, load_path );
+-            wm->ldr.Flags |= LDR_DONT_RESOLVE_REFS;
+-        }
 -    }
 -
      /* fixup imports */
  
      if (!(flags & DONT_RESOLVE_DLL_REFERENCES) &&
 diff --git a/dlls/ntdll/unix/env.c b/dlls/ntdll/unix/env.c
-index f76368ba73d..c0ed676963d 100644
+index d475a34fbf3..c4a405f9b63 100644
 --- a/dlls/ntdll/unix/env.c
 +++ b/dlls/ntdll/unix/env.c
-@@ -2515,7 +2515,6 @@ void WINAPI RtlSetLastWin32Error( DWORD err )
+@@ -2523,7 +2523,6 @@ void WINAPI RtlSetLastWin32Error( DWORD err )
   */
  NTSTATUS WINAPI __wine_set_unix_env( const char *var, const char *val )
  {
@@ -217,10 +221,10 @@ index f76368ba73d..c0ed676963d 100644
      return 0;
  }
 diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
-index 1e75eff1595..6dc5706b9ea 100644
+index 80b17e17b16..797108746a3 100644
 --- a/dlls/ntdll/unix/loader.c
 +++ b/dlls/ntdll/unix/loader.c
-@@ -592,47 +592,12 @@ NTSTATUS exec_wineloader( char **argv, int socketfd, const pe_image_info_t *pe_i
+@@ -625,47 +625,12 @@ NTSTATUS exec_wineloader( char **argv, int socketfd, const struct pe_image_info
      WORD machine = pe_info->machine;
      ULONGLONG res_start = pe_info->base;
      ULONGLONG res_end = pe_info->base + pe_info->map_size;
@@ -269,7 +273,7 @@ index 1e75eff1595..6dc5706b9ea 100644
      signal( SIGPIPE, SIG_DFL );
  
      snprintf( socket_env, sizeof(socket_env), "WINESERVERSOCKET=%u", socketfd );
-@@ -1052,96 +1017,6 @@ static NTSTATUS load_so_dll( void *args )
+@@ -1085,122 +1050,6 @@ static NTSTATUS load_so_dll( void *args )
      return status;
  }
  
@@ -292,13 +296,18 @@ index 1e75eff1595..6dc5706b9ea 100644
 -    return NULL;
 -}
 -
--static void steamclient_write_jump(void *src_addr, void *tgt_addr)
+-static void steamclient_write_jump_x64(void *src_addr, ULONGLONG tgt_addr)
 -{
--#ifdef _WIN64
 -    static const char mov[] = {0x48, 0xb8};
--#else
+-    static const char jmp[] = {0xff, 0xe0};
+-    memcpy(src_addr, mov, sizeof(mov));
+-    memcpy((char *)src_addr + sizeof(mov), &tgt_addr, sizeof(tgt_addr));
+-    memcpy((char *)src_addr + sizeof(mov) + sizeof(tgt_addr), jmp, sizeof(jmp));
+-}
+-
+-static void steamclient_write_jump_x86(void *src_addr, ULONG tgt_addr)
+-{
 -    static const char mov[] = {0xb8};
--#endif
 -    static const char jmp[] = {0xff, 0xe0};
 -    memcpy(src_addr, mov, sizeof(mov));
 -    memcpy((char *)src_addr + sizeof(mov), &tgt_addr, sizeof(tgt_addr));
@@ -308,12 +317,14 @@ index 1e75eff1595..6dc5706b9ea 100644
 -static NTSTATUS steamclient_setup_trampolines( void *args )
 -{
 -    static int noexec_cached = -1;
+-
 -    struct steamclient_setup_trampolines_params *params = args;
 -    HMODULE src_mod = params->src_mod, tgt_mod = params->tgt_mod;
 -    SYSTEM_BASIC_INFORMATION info;
--    IMAGE_NT_HEADERS *src_nt = (IMAGE_NT_HEADERS *)((UINT_PTR)src_mod + ((IMAGE_DOS_HEADER *)src_mod)->e_lfanew);
--    IMAGE_NT_HEADERS *tgt_nt = (IMAGE_NT_HEADERS *)((UINT_PTR)tgt_mod + ((IMAGE_DOS_HEADER *)tgt_mod)->e_lfanew);
--    IMAGE_SECTION_HEADER *src_sec = (IMAGE_SECTION_HEADER *)(src_nt + 1);
+-    IMAGE_NT_HEADERS *src_nt = get_rva( src_mod, ((IMAGE_DOS_HEADER *)src_mod)->e_lfanew );
+-    IMAGE_NT_HEADERS *tgt_nt = get_rva( tgt_mod, ((IMAGE_DOS_HEADER *)tgt_mod)->e_lfanew );
+-    IMAGE_SECTION_HEADER *src_sec = IMAGE_FIRST_SECTION( src_nt );
+-    BOOL x64 = src_nt->OptionalHeader.Magic == IMAGE_NT_OPTIONAL_HDR64_MAGIC;
 -    const IMAGE_EXPORT_DIRECTORY *src_exp, *tgt_exp;
 -    const DWORD *names;
 -    SIZE_T size;
@@ -348,16 +359,35 @@ index 1e75eff1595..6dc5706b9ea 100644
 -        assert(steamclient_count < ARRAY_SIZE(steamclient_srcs));
 -        steamclient_srcs[steamclient_count] = src_addr;
 -        steamclient_tgts[steamclient_count] = tgt_addr;
--        if (!noexec_cached) steamclient_write_jump(src_addr, tgt_addr);
+-        if (!noexec_cached)
+-        {
+-            if (x64) steamclient_write_jump_x64( src_addr, (ULONG_PTR)tgt_addr );
+-            else steamclient_write_jump_x86( src_addr, PtrToUlong(tgt_addr) );
+-        }
 -        else steamclient_count++;
 -    }
 -
--    src_addr = (void *)((UINT_PTR)src_mod + src_nt->OptionalHeader.AddressOfEntryPoint);
--    tgt_addr = (void *)((UINT_PTR)tgt_mod + tgt_nt->OptionalHeader.AddressOfEntryPoint);
+-    if (x64)
+-    {
+-        IMAGE_NT_HEADERS64 *src_nt64 = (IMAGE_NT_HEADERS64 *)src_nt, *tgt_nt64 = (IMAGE_NT_HEADERS64 *)tgt_nt;
+-        src_addr = (void *)((UINT_PTR)src_mod + src_nt64->OptionalHeader.AddressOfEntryPoint);
+-        tgt_addr = (void *)((UINT_PTR)tgt_mod + tgt_nt64->OptionalHeader.AddressOfEntryPoint);
+-    }
+-    else
+-    {
+-        IMAGE_NT_HEADERS32 *src_nt32 = (IMAGE_NT_HEADERS32 *)src_nt, *tgt_nt32 = (IMAGE_NT_HEADERS32 *)tgt_nt;
+-        src_addr = (void *)((UINT_PTR)src_mod + src_nt32->OptionalHeader.AddressOfEntryPoint);
+-        tgt_addr = (void *)((UINT_PTR)tgt_mod + tgt_nt32->OptionalHeader.AddressOfEntryPoint);
+-    }
+-
 -    assert(steamclient_count < ARRAY_SIZE(steamclient_srcs));
 -    steamclient_srcs[steamclient_count] = src_addr;
 -    steamclient_tgts[steamclient_count] = tgt_addr;
--    if (!noexec_cached) steamclient_write_jump(src_addr, tgt_addr);
+-    if (!noexec_cached)
+-    {
+-        if (x64) steamclient_write_jump_x64( src_addr, (ULONG_PTR)tgt_addr );
+-        else steamclient_write_jump_x86( src_addr, PtrToUlong(tgt_addr) );
+-    }
 -    else steamclient_count++;
 -
 -    return STATUS_SUCCESS;
@@ -366,7 +396,7 @@ index 1e75eff1595..6dc5706b9ea 100644
  static BOOL debugstr_pc_impl( void *pc, char *buffer, unsigned int size )
  {
      unsigned int len;
-@@ -1203,7 +1078,6 @@ static const unixlib_entry_t unix_call_funcs[] =
+@@ -1262,7 +1111,6 @@ static const unixlib_entry_t unix_call_funcs[] =
      unixcall_wine_server_handle_to_fd,
      unixcall_wine_spawnvp,
      system_time_precise,
@@ -374,8 +404,36 @@ index 1e75eff1595..6dc5706b9ea 100644
      is_pc_in_native_so,
      debugstr_pc,
  };
+@@ -1273,19 +1121,6 @@ static const unixlib_entry_t unix_call_funcs[] =
+ static NTSTATUS wow64_load_so_dll( void *args ) { return STATUS_INVALID_IMAGE_FORMAT; }
+ static NTSTATUS wow64_unwind_builtin_dll( void *args ) { return STATUS_UNSUCCESSFUL; }
+ 
+-static NTSTATUS wow64_steamclient_setup_trampolines( void *args )
+-{
+-    struct
+-    {
+-        ULONG src_mod;
+-        ULONG tgt_mod;
+-    } const *params32 = args;
+-    struct steamclient_setup_trampolines_params params;
+-    params.src_mod = (HMODULE)(UINT_PTR)params32->src_mod;
+-    params.tgt_mod = (HMODULE)(UINT_PTR)params32->tgt_mod;
+-    return steamclient_setup_trampolines( &params );
+-}
+-
+ static NTSTATUS wow64_debugstr_pc( void *args )
+ {
+     struct
+@@ -1308,7 +1143,6 @@ const unixlib_entry_t unix_call_wow64_funcs[] =
+     wow64_wine_server_handle_to_fd,
+     wow64_wine_spawnvp,
+     system_time_precise,
+-    wow64_steamclient_setup_trampolines,
+     is_pc_in_native_so,
+     wow64_debugstr_pc,
+ };
 diff --git a/dlls/ntdll/unix/signal_i386.c b/dlls/ntdll/unix/signal_i386.c
-index 23c01c6b64c..3a138c1dfc1 100644
+index 33958f76ee9..5d5a0e0cf9e 100644
 --- a/dlls/ntdll/unix/signal_i386.c
 +++ b/dlls/ntdll/unix/signal_i386.c
 @@ -1927,7 +1927,6 @@ static void segv_handler( int signal, siginfo_t *siginfo, void *sigcontext )
@@ -400,10 +458,10 @@ index 23c01c6b64c..3a138c1dfc1 100644
          rec.ExceptionInformation[0] = (ERROR_sig(ucontext) >> 1) & 0x09;
          rec.ExceptionInformation[1] = (ULONG_PTR)siginfo->si_addr;
 diff --git a/dlls/ntdll/unix/signal_x86_64.c b/dlls/ntdll/unix/signal_x86_64.c
-index c76a08c5237..a5814688d5c 100644
+index e82b5709318..7c320dedb4c 100644
 --- a/dlls/ntdll/unix/signal_x86_64.c
 +++ b/dlls/ntdll/unix/signal_x86_64.c
-@@ -2315,7 +2315,6 @@ static void segv_handler( int signal, siginfo_t *siginfo, void *sigcontext )
+@@ -2321,7 +2321,6 @@ static void segv_handler( int signal, siginfo_t *siginfo, void *sigcontext )
      EXCEPTION_RECORD rec = { 0 };
      struct xcontext context;
      ucontext_t *ucontext = init_handler( sigcontext );
@@ -411,7 +469,7 @@ index c76a08c5237..a5814688d5c 100644
  
      rec.ExceptionAddress = (void *)RIP_sig(ucontext);
      save_context( &context, ucontext );
-@@ -2347,12 +2346,6 @@ static void segv_handler( int signal, siginfo_t *siginfo, void *sigcontext )
+@@ -2353,12 +2352,6 @@ static void segv_handler( int signal, siginfo_t *siginfo, void *sigcontext )
          }
          break;
      case TRAP_x86_PAGEFLT:  /* Page fault */
@@ -425,10 +483,10 @@ index c76a08c5237..a5814688d5c 100644
          rec.ExceptionInformation[0] = (ERROR_sig(ucontext) >> 1) & 0x09;
          rec.ExceptionInformation[1] = (ULONG_PTR)siginfo->si_addr;
 diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
-index 9dc8ea627e0..d7d749ec741 100644
+index 8ed3dec2bff..2fa67d1ecb2 100644
 --- a/dlls/ntdll/unix/unix_private.h
 +++ b/dlls/ntdll/unix/unix_private.h
-@@ -268,7 +268,6 @@ extern unsigned int alloc_object_attributes( const OBJECT_ATTRIBUTES *attr, stru
+@@ -280,7 +280,6 @@ extern unsigned int alloc_object_attributes( const OBJECT_ATTRIBUTES *attr, stru
                                               data_size_t *ret_len );
  extern NTSTATUS system_time_precise( void *args );
  
@@ -462,7 +520,7 @@ index e0870584a68..94abe3450b8 100644
      unix_debugstr_pc,
  };
 diff --git a/dlls/shell32/shellpath.c b/dlls/shell32/shellpath.c
-index 27354345c94..1ac928b66b8 100644
+index 07295713cb3..9ffeb0986d5 100644
 --- a/dlls/shell32/shellpath.c
 +++ b/dlls/shell32/shellpath.c
 @@ -2651,6 +2651,183 @@ end:
@@ -741,10 +799,10 @@ index 27354345c94..1ac928b66b8 100644
  }
  
 diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
-index b8075aeb5a9..53bcc3b8211 100644
+index 35c6cd23d05..14978f525b1 100644
 --- a/dlls/winex11.drv/window.c
 +++ b/dlls/winex11.drv/window.c
-@@ -1060,19 +1060,8 @@ static void set_initial_wm_hints( Display *display, Window window )
+@@ -1093,19 +1093,8 @@ static void set_initial_wm_hints( Display *display, Window window )
      /* class hints */
      if ((class_hints = XAllocClassHint()))
      {
@@ -766,84 +824,11 @@ index b8075aeb5a9..53bcc3b8211 100644
          XSetClassHint( display, window, class_hints );
          XFree( class_hints );
      }
-diff --git a/loader/wine.inf.in b/loader/wine.inf.in
-index 4c423fe97a7..d136598d1fa 100644
---- a/loader/wine.inf.in
-+++ b/loader/wine.inf.in
-@@ -98,8 +98,7 @@ AddReg=\
-     VersionInfo,\
-     LicenseInformation,\
-     NVIDIANGX, \
--    ProtonOverrides,\
--    SteamClient
-+    ProtonOverrides
- 
- [DefaultInstall.ntamd64]
- RegisterDlls=RegisterDllsSection
-@@ -128,8 +127,7 @@ AddReg=\
-     LicenseInformation,\
-     NVIDIANGX, \
-     TTS, \
--    ProtonOverrides,\
--    SteamClient.ntamd64
-+    ProtonOverrides
- 
- [DefaultInstall.ntarm64]
- RegisterDlls=RegisterDllsSection
-@@ -173,8 +171,7 @@ AddReg=\
-     VersionInfo,\
-     LicenseInformation,\
-     NVIDIANGX, \
--    ProtonOverrides,\
--    SteamClient.ntamd64
-+    ProtonOverrides
- 
- [Wow64Install.ntarm]
- RegisterDlls=RegisterDllsSection
-@@ -352,7 +349,6 @@ HKCR,ftp\shell\open\command,,2,"""%11%\winebrowser.exe"" ""%1"""
- HKCR,http\shell\open\command,,2,"""%11%\winebrowser.exe"" ""%1"""
- HKCR,https\shell\open\command,,2,"""%11%\winebrowser.exe"" ""%1"""
- HKCR,mailto\shell\open\command,,2,"""%11%\winebrowser.exe"" ""%1"""
--HKCR,steam\shell\open\command,,,"""%16426%\Steam\Steam.exe"" -- ""%1"""
- 
- [ContentIndex]
- HKLM,System\CurrentControlSet\Control\ContentIndex\Language\Neutral,"WBreakerClass",,"{369647e0-17b0-11ce-9950-00aa004bbb1f}"
-@@ -467,7 +463,6 @@ HKLM,%CurrentVersionNT%\AeDebug,"Debugger",2,"winedbg --auto %ld %ld"
- HKLM,%CurrentVersionNT%\AeDebug,"Auto",2,"1"
- HKCU,Software\Wine\Debug,"RelayExclude",2,"ntdll.RtlEnterCriticalSection;ntdll.RtlTryEnterCriticalSection;ntdll.RtlLeaveCriticalSection;kernel32.48;kernel32.49;kernel32.94;kernel32.95;kernel32.96;kernel32.97;kernel32.98;kernel32.TlsGetValue;kernel32.TlsSetValue;kernel32.FlsGetValue;kernel32.FlsSetValue;kernel32.SetLastError"
- HKCU,Software\Wine\Debug,"RelayFromExclude",2,"winex11.drv;winemac.drv;user32;gdi32;advapi32;kernel32"
--HKCU,Software\Wine\WineDbg,"ShowCrashDialog",0x00010003,0x00000000
- 
- [DirectX]
- HKLM,Software\Microsoft\DirectX,"Version",,"4.09.00.0904"
-@@ -2821,22 +2816,6 @@ InfFiles  = 17
- NlsFiles  = 11
- SortFiles = 10,globalization\sorting
- 
--[SteamClient]
--HKCU,Software\Valve\Steam,"SteamPath",,"%16422%\Steam"
--HKCU,Software\Valve\Steam,"SteamExe",,"%16422%\Steam\Steam.exe"
--HKCU,Software\Valve\Steam\ActiveProcess,"PID",0x10001,0x0000fffe
--HKCU,Software\Valve\Steam\ActiveProcess,"SteamClientDll",,"%16422%\Steam\steamclient.dll"
--HKCU,Software\Valve\Steam\ActiveProcess,"SteamPath",,"%16422%\Steam"
--
--[SteamClient.ntamd64]
--HKCU,Software\Valve\Steam,"SteamPath",,"%16422%\Steam"
--HKCU,Software\Valve\Steam,"SteamExe",,"%16422%\Steam\Steam.exe"
--HKCU,Software\Valve\Steam\ActiveProcess,"PID",0x10001,0x0000fffe
--HKCU,Software\Valve\Steam\ActiveProcess,"SteamClientDll",,"%16426%\Steam\steamclient.dll"
--HKCU,Software\Valve\Steam\ActiveProcess,"SteamClientDll64",,"%16426%\Steam\steamclient64.dll"
--HKCU,Software\Valve\Steam\ActiveProcess,"SteamPath",,"%16426%\Steam"
--HKLM,Software\Wow6432Node\Valve\Steam,"InstallPath",,"%16422%\Steam"
--
- [NVIDIANGX]
- HKLM,Software\NVIDIA Corporation\Global\NGXCore,"FullPath",,"C:\Windows\System32"
- 
 diff --git a/programs/wineboot/wineboot.c b/programs/wineboot/wineboot.c
-index ff6bd6cc38c..b319ad2bfd5 100644
+index 31c2c464559..6b7db33f729 100644
 --- a/programs/wineboot/wineboot.c
 +++ b/programs/wineboot/wineboot.c
-@@ -1461,6 +1461,37 @@ static BOOL start_services_process(void)
+@@ -1484,6 +1484,37 @@ static BOOL start_services_process(void)
      return TRUE;
  }
  
@@ -881,7 +866,7 @@ index ff6bd6cc38c..b319ad2bfd5 100644
  static HANDLE start_rundll32( const WCHAR *inf_path, const WCHAR *install, WORD machine )
  {
      WCHAR app[MAX_PATH + ARRAY_SIZE(L"\\rundll32.exe" )];
-@@ -1660,6 +1691,7 @@ static void update_wineprefix( BOOL force )
+@@ -1684,6 +1715,7 @@ static void update_wineprefix( BOOL force )
  
          if ((process = start_rundll32( inf_path, L"PreInstall", IMAGE_FILE_MACHINE_TARGET_HOST )))
          {
@@ -889,7 +874,7 @@ index ff6bd6cc38c..b319ad2bfd5 100644
              for (;;)
              {
                  if (process)
-@@ -1680,6 +1712,7 @@ static void update_wineprefix( BOOL force )
+@@ -1704,6 +1736,7 @@ static void update_wineprefix( BOOL force )
                      process = start_rundll32( inf_path, L"Wow64Install", machines[count].Machine );
                  count++;
              }
@@ -932,7 +917,7 @@ index 738930e39a6..24416070152 100644
      {
          WCHAR **args = CommandLineToArgvW( candidates, &count );
 diff --git a/programs/winedbg/debugger.h b/programs/winedbg/debugger.h
-index 74c935f42db..c65b9bfae67 100644
+index f3b02e9c5df..45a91e2a6f5 100644
 --- a/programs/winedbg/debugger.h
 +++ b/programs/winedbg/debugger.h
 @@ -311,8 +311,6 @@ extern	DWORD	                dbg_curr_tid;
@@ -945,7 +930,7 @@ index 74c935f42db..c65b9bfae67 100644
  struct dbg_internal_var
  {
 diff --git a/programs/winedbg/tgt_active.c b/programs/winedbg/tgt_active.c
-index 23652b77726..17578857133 100644
+index 8bb20ecadf2..a919f70a486 100644
 --- a/programs/winedbg/tgt_active.c
 +++ b/programs/winedbg/tgt_active.c
 @@ -22,8 +22,6 @@
@@ -957,7 +942,7 @@ index 23652b77726..17578857133 100644
  
  #include "debugger.h"
  #include "psapi.h"
-@@ -818,48 +816,6 @@ static HANDLE create_temp_file(void)
+@@ -834,48 +832,6 @@ static HANDLE create_temp_file(void)
                          NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL | FILE_FLAG_DELETE_ON_CLOSE, 0 );
  }
  
@@ -1006,7 +991,7 @@ index 23652b77726..17578857133 100644
  /******************************************************************
   *		dbg_active_attach
   *
-@@ -951,10 +907,6 @@ enum dbg_start dbg_active_auto(int argc, char* argv[])
+@@ -966,10 +922,6 @@ enum dbg_start dbg_active_auto(int argc, char* argv[])
          if (event) thread = display_crash_details( event );
          if (thread) dbg_houtput = output = create_temp_file();
          break;
@@ -1018,7 +1003,7 @@ index 23652b77726..17578857133 100644
  
      input = parser_generate_command_file("echo Modules:", "info share",
 diff --git a/programs/winedbg/winedbg.c b/programs/winedbg/winedbg.c
-index 7769d20481d..92fa77429f6 100644
+index b7c899d55c4..c7f14e8238f 100644
 --- a/programs/winedbg/winedbg.c
 +++ b/programs/winedbg/winedbg.c
 @@ -82,8 +82,6 @@ DWORD	                dbg_curr_pid = 0;
@@ -1053,5 +1038,5 @@ index 7769d20481d..92fa77429f6 100644
          line_pos -= i;
      }
 -- 
-2.47.1
+2.49.0
 
diff --git a/wine-tkg-git/wine-tkg-scripts/build-32.sh b/wine-tkg-git/wine-tkg-scripts/build-32.sh
index f8cc2ddb..2838d2e8 100644
--- a/wine-tkg-git/wine-tkg-scripts/build-32.sh
+++ b/wine-tkg-git/wine-tkg-scripts/build-32.sh
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+export FFMPEG_CFLAGS="-I/usr/include/ffmpeg4.4"
+export FFMPEG_LIBS="-L/usr/lib/ffmpeg4.4 -lavcodec -lavformat -lavutil"
+
 _exports_32() {
   if [ "$_NOCCACHE" != "true" ]; then
     if [ -e /usr/bin/ccache ]; then
diff --git a/wine-tkg-git/wine-tkg-scripts/build-64.sh b/wine-tkg-git/wine-tkg-scripts/build-64.sh
index 891013a4..74c2eb45 100644
--- a/wine-tkg-git/wine-tkg-scripts/build-64.sh
+++ b/wine-tkg-git/wine-tkg-scripts/build-64.sh
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+export FFMPEG_CFLAGS="-I/usr/include/ffmpeg4.4"
+export FFMPEG_LIBS="-L/usr/lib/ffmpeg4.4 -lavcodec -lavformat -lavutil"
+
 _exports_64() {
   if [ "$_NOCCACHE" != "true" ]; then
     if [ -e /usr/bin/ccache ]; then
-- 
2.49.0

