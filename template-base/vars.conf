### List of all TDF settings
# For more info about possible values and details about what they do, see README.md here: https://github.com/adolfintel/TDF/blob/master/README.md#configuration-variables

# --- VARIABLES - Basic configuration ---
game_exe=''
#game_args=''
#game_workingDir=''

# --- VARIABLES - TDF stuff ---
#TDF_TITLE=... #title for the TDF UI (says "Launcher" by default)
#TDF_DETAILED_PROGRESS=1 #1=show info like "Installing DXVK", 0=just say "Launching..."
#TDF_MULTIPLE_INSTANCES="askcmd" #deny=exit without error messages, error=show an error message and close, askcmd=ask the user if they want to run cmd inside the running prefix, cmd=run command prompt inside the running prefix, allow=allow multiple instances of the game
#TDF_IGNORE_EXIST_CHECKS=0 #1=skip the check that game_exe actually exists before launching the game
#TDF_HIDE_GAME_RUNNING_DIALOG=0
#TDF_SHOW_PLAY_TIME=0 #1=show how long you've been playing when you close the game

# --- VARIABLES - Wine ---
#TDF_WINE_PREFERRED_VERSION="games" #games=game-optimized build, mainline=regular wine, custom=the build in the wine-custom folder outside the system folder, system=the version of wine that's installed on the system, or mainline if not installed, any other value will use system/wine-yourValue or system wine if not found
#TDF_WINE_HIDE_CRASHES=1 #1=hide the "stopped working" window if the game crashes (recommended)
#TDF_WINE_AUDIO_DRIVER="default" #pulse,alsa,jack,default (let wine decide)
#TDF_WINE_GRAPHICS_DRIVER="default" #x11,wayland,default (let wine decide)
#TDF_WINE_DPI=-1 #-1=use system dpi, 0=let wine decide, number=use specified dpi
#TDF_WINE_KILL_BEFORE=0 #1=explicitly kill the wine processes before launching the game (not recommended)
#TDF_WINE_KILL_AFTER=0 #1=explicitly kill the wine processes when the game ends (not recommended)
#TDF_START_ARGS='' #additional arguments to pass to wine's start command, such as /affinity 1
#TDF_UI_LANGUAGE='' #language for the TDF UI (only 'en' or 'it' at the moment)
#TDF_WINE_LANGUAGE='' #language for wine applications. By default it's set to your $LANG, you can force any locale in the standard format, like 'en_US.UTF-8'
#TDF_WINE_ARCH="win64" #win64=emulate 64bit windows, win32=emulate 32bit windows (useful for older games). cannot be changed after wineprefix initialization
#TDF_WINE_SYNC="fsync" #fsync=use fsync if futex2 is available, otherwise esync, esync=always use esync, default=let wine decide. Only supported by games build, other versions will ignore this parameter
#TDF_WINE_DEBUG_RELAY=0 #1=intercept all system calls and dump them to a file (for debugging)
#TDF_WINE_DEBUG_GSTREAMER=0 #1=enable gstreamer debug output on the terminal (for debugging video problems)
#TDF_WINE_SMOKETEST=1 #1=make sure that wine actually works before trying to launch the game, set to 0 for faster loading
#TDF_WINEMONO=0 #1=enable wine mono for .net applications (not usually needed for games)
#TDF_WINEGECKO=0 #1=enable wine gecko for applications that need IE (not usually needed for games)
#TDF_WINE_NOSMT=0 #1=don't show hyperthreading/SMT to the application (if present in the system). Only supported by games build, other versions will ignore this parameter
#TDF_WINE_NOECORES=0 #1=don't show e-cores to the application. Only supported by games build, other versions will ignore this parameter
#TDF_WINE_PREFER_SAMESOCKET=1 #0=assign cores based on speed exclusively, 1=assign based on speed, but first use all the cores on the first CPUs then use the others, 2=only show the first CPU to the application and ignore the others. This can be useful if you're gaming on a multi-CPU server or something. Only supported by games build, other versions will ignore this parameter
#TDF_WINE_MAXLOGICALCPUS=0 #the maximum number of logical CPUs (aka hardware threads, the ones you see in task manager) that the application can use. If the number of logical CPUs in the machine exceeds this, TDF will limit how many can be used by the application assigning them "intelligently" to maximize gaming performance. Set to 0 to disable limit. Only supported by games build, other versions will ignore this parameter
#export WINE_LARGE_ADDRESS_AWARE=1
#export WINEDEBUG=-all
#export WINEDLLOVERRIDES=''
#export WINE_CPU_TOPOLOGY=...
#export WINE_HEAP_DELAY_FREE=0 #set to 1 to workaround some crashes caused by bad memory management in some old games and applications
#See here for additional wine settings: https://www.winehq.org/docs/en/wineusr-guide.html

# --- VARIABLES - DXVK (DX8-11 emulation) ---
#TDF_DXVK=1
#TDF_DXVK_NVAPI=0 #set to 1 to enable nvapi (nvidia gpus only)
#TDF_DXVK_ASYNC=2 #0=always use regular dxvk, 1=always use async version, 2=use regular dxvk if the gpu supports gpl, async if it doesn't
#See here for additional settings to be put in a dxvk.conf file next to the game's exe file: https://github.com/doitsujin/dxvk/blob/master/dxvk.conf

# --- VARIABLES - VKD3D (DX12 emulation) ---
#TDF_VKD3D=1
#See here for additional settings: https://github.com/HansKristian-Work/vkd3d-proton/blob/master/README.md#environment-variables

# --- VARIABLES - Sandboxing ---
#TDF_BLOCK_NETWORK=1 #0=allow network access, 1=block with unshare -nc, 2=block with firejail if available, unshare -nc if it's not
#TDF_BLOCK_BROWSER=1 #0=wine apps can launch the native browser, 1=block browser access (recommended)
#TDF_BLOCK_ZDRIVE=1 #1=wine apps can't access the linux file system (after installation)
#TDF_BLOCK_EXTERNAL_DRIVES=1 #1=wine apps can't access external drives like CDs and USBs (after installation)
#TDF_BLOCK_SYMLINKS_IN_CDRIVE=1 #1=remove symlinks from the virtual C drive (makes it harder to escape the sandbox)
#TDF_FAKE_HOMEDIR=0 #create a zzhome folder to be used as a temporary home, useful if the game needs a custom .driconf or similar tweaks
#TDF_PROTECT_DOSDEVICES=0 #prevents wine from modifying drive mappings. Not necessary when using the games and mainline builds. Can cause hangs when enabled

# --- VARIABLES - Gamescope ---
#TDF_GAMESCOPE=0 #1=run the game through gamescope (if installed in the system)
#TDF_GAMESCOPE_PARAMETERS='' #if not changed in config, this will become -f -r 60 -w $XRES -h $YRES -- where $XRES and $YRES are the resolution of the main display

# --- VARIABLES - Miscellaneous ---
#TDF_GAMEMODE=1 #1=use feral gamemode (if installed in the system)
#TDF_MANGOHUD=0 #1=show an afterburner style performance overlay (if installed in the system)
#TDF_COREFONTS=1 #1=install basic windows fonts such as Arial
#TDF_VCREDIST=1 #install MS visual studio runtime (2015+)
#export DRI_PRIME=... #which GPU to use (0=first GPU, 1=second GPU, etc.)
#export SteamGameId=... #steam appid for this game (activates some game-specific fixes in the games build)

# --- CALLBACKS ---
#customChecks(){
#   code to be executed immediately after the configuration is loaded
#}
#onGameStart(){
#   code to be executed right before the game is launched
#}
#onGameEnd(){
#   code to be executed right after the game is closed
#}
#whileGameRunning(){
#   code to be executed while the game is running. Runs in a separate subshell, use isProcessRunning "game.exe" to know if the process is still running
#}
#onArchiveStart(){
#   code to be executed when using ./run.sh archive ...
#}
#onArchiveEnd(){
#   code to be executed after archiving is done ...
#}
